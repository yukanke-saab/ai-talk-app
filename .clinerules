# Cline ルール

このファイルは、Cline がこのプロジェクトで作業する際のルールを定義します。

## プロジェクト情報

*   **リポジトリ:** https://github.com/yukanke-saab/ai-talk-app
*   **開発環境:** ローカル
*   **タスク管理:** GitHub Issues

## Git 運用ルール

*   作業が一段落したら、適宜コミットしてください。
*   必要に応じて、リモートリポジトリにプッシュしてください。
*   タスクが終わったらコミット＆プッシュをし、該当するissueを閉じてください。

## コンポーネント運用ルール

*   既存の共通コンポーネントがあれば、可能な限りそれを活用してください。一貫したUIを保ち、開発効率を高めるためです。

## コーディング規約

以下は、このプロジェクトで適用されるコーディング規約です。

### 変数名の命名規則 (naming_convention_variable)

*   **説明:** 変数名は camelCase で記述する必要があります。コードの可読性と一貫性を保つためです。
*   **重大度:** error
*   **パターン:** `^(?!([a-z][a-zA-Z0-9]*)$).+$`
*   **置換:** (なし)

### 関数名の命名規則 (naming_convention_function)

*   **説明:** 関数名は camelCase で記述する必要があります。コードの可読性と一貫性を保つためです。
*   **重大度:** error
*   **パターン:** `^(?!([a-z][a-zA-Z0-9]*)$).+$`
*   **置換:** (なし)

### クラス名の命名規則 (naming_convention_class)

*   **説明:** クラス名は PascalCase で記述する必要があります。他の識別子（変数や関数）と区別しやすくするためです。
*   **重大度:** error
*   **パターン:** `^(?!([A-Z][a-zA-Z0-9]*)$).+$`
*   **置換:** (なし)

### インデント (indent_2_spaces)

*   **説明:** インデントはスペース2つを使用する必要があります。コードの見た目を統一し、可読性を高めるためです。
*   **重大度:** error
*   **パターン:** `^( +(?!\n))+$`
*   **置換:** `  ` (スペース2つ)

### 行末のセミコロン (semicolon_at_end_of_line)

*   **説明:** 行末にはセミコロンを記述する必要があります。JavaScript の自動セミコロン挿入 (ASI) による予期せぬ動作を防ぐためです。
*   **重大度:** warning
*   **パターン:** `^(.*[^;])$`
*   **置換:** `$1;`

### 関数の JSDoc コメント (jsdoc_comment_for_function)

*   **説明:** 関数には JSDoc 形式でコメントを記述する必要があります。関数の目的、引数、戻り値を明確にし、コードの理解とメンテナンスを容易にするためです。
*   **重大度:** warning
*   **パターン:** `^(function\s+([a-zA-Z0-9]*)\s*\((.*)\)\s*\{)$`
*   **置換:**
```javascript
/**
 * [関数の説明をここに記述]
 * @param {[引数の型]} [引数名] [引数の説明]
 * @returns {[戻り値の型]} [戻り値の説明]
 */
$1


### コンポーネント名の命名規則 (naming_convention_component)

*   **説明:** React コンポーネント名は PascalCase で記述する必要があります。他の識別子と区別し、コンポーネントであることを明確にするためです。
*   **重大度:** error
*   **パターン:** `^(?!([A-Z][a-zA-Z0-9]*)$).+$`
*   **置換:** (なし)
